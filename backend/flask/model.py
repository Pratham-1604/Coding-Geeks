# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1folOHBFg3lzjpFzw0zA1cezxO0tCVbZG
"""

import numpy as np
import pandas as pd

df1 = pd.read_csv("df1.csv")
# df2=pd.read_csv('df2.csv')

df1.head()

# df3=df2.iloc[:,7:14].values
# df3=pd.DataFrame(df3)
# df3.head()

# df4 = pd.concat([df1, df2], ignore_index=True)
# df4.head()

import tensorflow as tf

X = df1.iloc[:, [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11]].values
y = df1.iloc[:, -1].values

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)

# from sklearn.preprocessing import StandardScaler
# sc = StandardScaler()
# X_train = sc.fit_transform(X_train)
# X_test = sc.transform(X_test)

median_value = df1["crm"].median()

# ann = tf.keras.models.Sequential()
# ann.add(tf.keras.layers.Dense(units=6, activation='relu',input_shape=(11,)))
# ann.add(tf.keras.layers.Dense(units=6, activation='relu'))
# ann.add(tf.keras.layers.Dense(units=1))
# ann.compile(optimizer = 'adam', loss = 'mean_squared_error', metrics = ['mean_squared_error'])

# ann.fit(X_train, y_train, batch_size = 32, epochs = 100)

from sklearn.ensemble import RandomForestRegressor

regressor = RandomForestRegressor(n_estimators=10, random_state=0)
regressor.fit(X_train, y_train)

# regressor.predict([[1, 0, 0, 0, 0, 0, 1.2, 2.5, 5, 6, 500000]])
# print(yy / median_value)
